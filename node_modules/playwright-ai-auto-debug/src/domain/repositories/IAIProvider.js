// src/domain/repositories/IAIProvider.js

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –≤—Å–µ—Ö AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ (Mistral, OpenAI, Claude)
 */
export class IAIProvider {
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ò–ò –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞
   * @param {string} prompt - —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
   * @param {Object} config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @param {Object} domSnapshot - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π DOM snapshot –æ—Ç MCP
   * @returns {Promise<string>} - –æ—Ç–≤–µ—Ç –ò–ò
   */
  async generateResponse(prompt, config, domSnapshot = null) {
    throw new Error('generateResponse must be implemented by concrete provider');
  }

  /**
   * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @param {Object} config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {Promise<Object>} - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   */
  async validateConfiguration(config) {
    throw new Error('validateConfiguration must be implemented by concrete provider');
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @returns {string}
   */
  getProviderName() {
    throw new Error('getProviderName must be implemented by concrete provider');
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–æ–¥–µ–ª–∏
   * @returns {string[]}
   */
  getSupportedModels() {
    throw new Error('getSupportedModels must be implemented by concrete provider');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
   * @param {Object} config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @returns {Promise<boolean>}
   */
  async checkApiAvailability(config) {
    throw new Error('checkApiAvailability must be implemented by concrete provider');
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏–º–∏—Ç—ã –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (tokens, requests per minute)
   * @returns {Object}
   */
  getLimits() {
    return {
      maxTokens: 4096,
      requestsPerMinute: 60,
      maxPromptLength: 8000
    };
  }

  /**
   * –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ–º–ø—Ç —Å —É—á–µ—Ç–æ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @param {string} prompt - –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç
   * @param {Object} domSnapshot - DOM snapshot
   * @returns {string} - –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
   */
  preparePrompt(prompt, domSnapshot = null) {
    let preparedPrompt = prompt;
    
    if (domSnapshot) {
      preparedPrompt += `\n\nüì∏ DOM Snapshot:\n${JSON.stringify(domSnapshot, null, 2)}`;
    }
    
    return preparedPrompt;
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @param {string} rawResponse - —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API
   * @returns {string} - –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
   */
  processResponse(rawResponse) {
    return rawResponse.trim();
  }
} 