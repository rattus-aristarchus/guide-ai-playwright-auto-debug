#!/usr/bin/env node
// DemoProject/demo-auto-coverage.js

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è UI');
console.log('='.repeat(50));

console.log('\nüìã –ß—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä:');
console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ç–µ—Å—Ç–∞—Ö');
console.log('‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)');
console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è');
console.log('‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ç–µ—Å—Ç–∞–º–∏');

console.log('\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ (—É–∂–µ —Å–¥–µ–ª–∞–Ω–∞):');
console.log('‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è autoCoverage –≤ playwright.config.js');
console.log('‚Ä¢ –°–æ–∑–¥–∞–Ω AutoCoveragePlugin –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è');
console.log('‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!');

console.log('\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º...');

try {
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
  console.log('–ó–∞–ø—É—Å–∫: npx playwright test auto-coverage.spec.js');
  execSync('npx playwright test auto-coverage.spec.js --reporter=list', { 
    stdio: 'inherit',
    cwd: __dirname 
  });

  console.log('\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
  const reportsDir = path.join(__dirname, 'coverage-reports');
  
  if (fs.existsSync(reportsDir)) {
    console.log('\nüìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è:');
    
    const files = fs.readdirSync(reportsDir);
    files.forEach(file => {
      const filePath = path.join(reportsDir, file);
      const stats = fs.statSync(filePath);
      console.log(`‚Ä¢ ${file} (${Math.round(stats.size / 1024)}KB)`);
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    const summaryPath = path.join(reportsDir, 'auto-coverage-summary.md');
    if (fs.existsSync(summaryPath)) {
      console.log('\nüìã –°–≤–æ–¥–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è:');
      const summary = fs.readFileSync(summaryPath, 'utf8');
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
      const lines = summary.split('\n');
      lines.slice(0, 15).forEach(line => {
        if (line.includes('**') || line.includes('##')) {
          console.log(line.replace(/[#*]/g, ''));
        }
      });
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º JSON —Å–≤–æ–¥–∫—É
    const jsonSummaryPath = path.join(reportsDir, 'auto-coverage-summary.json');
    if (fs.existsSync(jsonSummaryPath)) {
      console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      const jsonSummary = JSON.parse(fs.readFileSync(jsonSummaryPath, 'utf8'));
      
      console.log(`‚Ä¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${jsonSummary.summary.totalTests}`);
      console.log(`‚Ä¢ –í—Å–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: ${jsonSummary.summary.totalInteractions}`);
      console.log(`‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${jsonSummary.summary.uniqueElements}`);
      
      if (jsonSummary.summary.actionTypes) {
        console.log('‚Ä¢ –¢–∏–ø—ã –¥–µ–π—Å—Ç–≤–∏–π:');
        Object.entries(jsonSummary.summary.actionTypes).forEach(([action, count]) => {
          console.log(`  - ${action}: ${count}`);
        });
      }
    }

  } else {
    console.log('\n‚ö†Ô∏è  –û—Ç—á–µ—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ autoCoverage –≤ playwright.config.js');
  }

  console.log('\nüéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è:');
  console.log('‚Ä¢ –ù–ï —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö');
  console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –í–°–ï –¥–µ–π—Å—Ç–≤–∏—è');
  console.log('‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã');
  console.log('‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å CI/CD');
  console.log('‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ Playwright —Ç–µ—Å—Ç–∞–º–∏');

  console.log('\nüìÅ –§–∞–π–ª—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
  console.log('‚Ä¢ lib/autoCoveragePlugin.js - –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞–≥–∏–Ω');
  console.log('‚Ä¢ lib/playwrightFixture.js - —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤');
  console.log('‚Ä¢ playwright.config.js - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–¥–æ–±–∞–≤–ª–µ–Ω autoCoverage)');

  console.log('\nüöÄ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö:');
  console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ lib/autoCoveragePlugin.js');
  console.log('2. –î–æ–±–∞–≤—å—Ç–µ autoCoverage –≤ playwright.config.js');
  console.log('3. –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Ç–µ—Å—Ç—ã –∫–∞–∫ –æ–±—ã—á–Ω–æ!');
  console.log('4. –û—Ç—á–µ—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

} catch (error) {
  console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:');
  console.error(error.message);
  
  console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
  console.log('‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
  console.log('‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±—Ä–∞—É–∑–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: npx playwright install');
  console.log('‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∞–π—Ç–æ–≤');
}

console.log('\n' + '='.repeat(50));
console.log('‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'); 