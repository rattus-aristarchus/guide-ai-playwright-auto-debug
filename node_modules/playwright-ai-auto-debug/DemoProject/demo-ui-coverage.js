#!/usr/bin/env node
// DemoProject/demo-ui-coverage.js

import { UICoverageAnalyzer } from './lib/uiCoverageAnalyzer.js';
import fs from 'fs';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π UI Coverage –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ MCP
 */

console.log('üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è UI Coverage –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ MCP');
console.log('='.repeat(60));

async function runDemo() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
  const analyzer = new UICoverageAnalyzer({
    criticalElements: [
      { type: 'button', name: 'Get started', selector: 'text=Get started' },
      { type: 'button', name: 'Search', selector: 'button:has-text("Search")' },
      { type: 'link', name: 'Docs', selector: 'text=Docs' },
      { type: 'navigation', name: 'Main', selector: 'navigation' },
      { type: 'button', name: 'Node.js', selector: 'button:has-text("Node.js")' }
    ]
  });

  console.log('\nüå≥ 1. –ê–Ω–∞–ª–∏–∑ –¥–µ—Ä–µ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (accessibility tree)');
  console.log('   ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–Ω–∏–º–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
  console.log('   ‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ä–æ–ª—è–º–∏, –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏');
  
  // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π snapshot –æ—Ç MCP
  const mockSnapshot = getMockMCPSnapshot();
  const accessibilityTree = analyzer.parseAccessibilityTree(mockSnapshot);
  
  console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${accessibilityTree.totalCount}`);
  console.log('   üîç –¢–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
  Object.entries(accessibilityTree.byType).forEach(([type, elements]) => {
    console.log(`      ‚Ä¢ ${type}: ${elements.length}`);
  });

  console.log('\n‚úÖ 2. –ü–æ–¥—Å—á–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ö —Å–≤–æ–π—Å—Ç–≤');
  console.log('   ‚úÖ –ü–æ–¥—Å—á–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø—É');
  console.log('   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏');
  console.log('   ‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º –¥–µ—Ä–µ–≤–æ–º');
  
  const elementStats = analyzer.analyzeElementCoverage(accessibilityTree);
  console.log('   üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
  console.log(`      –í—Å–µ–≥–æ: ${elementStats.summary.totalElements}`);
  console.log(`      –ö–Ω–æ–ø–∫–∏: ${elementStats.summary.buttons}`);
  console.log(`      –°—Å—ã–ª–∫–∏: ${elementStats.summary.links}`);
  console.log(`      –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ: ${elementStats.summary.interactive}`);
  console.log(`      –° aria-label: ${elementStats.summary.withAriaLabel}`);
  console.log(`      –° role: ${elementStats.summary.withRole}`);

  console.log('\nüîÑ 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏');
  console.log('   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
  console.log('   ‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
  console.log('   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π');
  
  const criticalCheck = analyzer.checkCriticalElements(
    accessibilityTree, 
    analyzer.config.criticalElements
  );
  
  console.log('   üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
  console.log(`      –ù–∞–π–¥–µ–Ω–æ: ${criticalCheck.foundCritical.length}`);
  console.log(`      –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${criticalCheck.missingCritical.length}`);
  
  if (criticalCheck.foundCritical.length > 0) {
    console.log('      ‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:');
    criticalCheck.foundCritical.forEach(el => {
      console.log(`         ‚Ä¢ ${el.name} (${el.type})`);
    });
  }
  
  if (criticalCheck.missingCritical.length > 0) {
    console.log('      ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:');
    criticalCheck.missingCritical.forEach(el => {
      console.log(`         ‚Ä¢ ${el.name} (${el.type})`);
    });
  }

  console.log('\nüìä 4. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∑–æ–ª–æ—Ç–æ–π –≤–µ—Ä—Å–∏–µ–π');
  console.log('   ‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º snapshot');
  console.log('   ‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ UI');
  console.log('   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ "–∑–æ–ª–æ—Ç–æ–π" –≤–µ—Ä—Å–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const goldenSnapshot = getGoldenSnapshot();
  const goldenTree = analyzer.parseAccessibilityTree(goldenSnapshot);
  const goldenComparison = analyzer.compareWithGolden(accessibilityTree, goldenTree);
  
  console.log('   üîó –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:');
  console.log(`      –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å: ${goldenComparison.identical ? '‚úÖ' : '‚ùå'}`);
  console.log(`      –ù–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${goldenComparison.newElements.length}`);
  console.log(`      –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${goldenComparison.removedElements.length}`);
  
  if (goldenComparison.differences.length > 0) {
    console.log('      üìù –†–∞–∑–ª–∏—á–∏—è:');
    goldenComparison.differences.forEach(diff => {
      console.log(`         ${diff}`);
    });
  }

  console.log('\n‚öôÔ∏è 5. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ CI/CD –∏ –º–∞–≥–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã');
  console.log('   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤');
  console.log('   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ pipeline');
  console.log('   ‚úÖ LLM –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  const fullAnalysis = {
    accessibilityTree,
    elementStats,
    criticalCheck,
    goldenComparison
  };
  
  const coverageReport = analyzer.generateCoverageReport(fullAnalysis, 'demo-page');
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
  const timestamp = Date.now();
  await analyzer.saveReport(coverageReport, `demo-ui-coverage-${timestamp}.md`);
  
  console.log('   üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç:');
  console.log(`      –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${coverageReport.metadata.pageName}`);
  console.log(`      –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${coverageReport.summary.totalElements}`);
  console.log(`      –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö: ${coverageReport.summary.interactiveElements}`);
  console.log(`      –û—Ü–µ–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: ${coverageReport.summary.accessibilityScore}%`);
  console.log(`      –ü–æ–∫—Ä—ã—Ç–∏–µ: ${coverageReport.summary.coveragePercentage}%`);
  
  console.log('\nüí° 6. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏');
  
  const practicalExamples = [
    {
      scenario: '–†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø–∞–≤—à–∏—Ö –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ —Å—Å—ã–ª–æ–∫',
      example: 'MCP –æ–±–Ω–∞—Ä—É–∂–∏—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏ "Submit" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Checkout'
    },
    {
      scenario: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏',
      description: '–ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–ª–∏—á–∏—è aria-label –∏ role –∞—Ç—Ä–∏–±—É—Ç–æ–≤',
      example: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∫–Ω–æ–ø–∫–∞—Ö –±–µ–∑ accessibility –∞—Ç—Ä–∏–±—É—Ç–æ–≤'
    },
    {
      scenario: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
      example: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –ø–æ–ª—è—Ö –≤ —Ñ–æ—Ä–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
    },
    {
      scenario: 'CI/CD –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ pipeline',
      example: '–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã'
    }
  ];
  
  practicalExamples.forEach((example, index) => {
    console.log(`   ${index + 1}. ${example.scenario}:`);
    console.log(`      ${example.description}`);
    console.log(`      üí° ${example.example}`);
  });

  console.log('\nüöÄ 7. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ MCP –¥–ª—è UI Coverage');
  
  const mcpCapabilities = [
    'DOM Snapshot - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    'Element Interaction - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
    'Accessibility Tree - –¥–µ—Ä–µ–≤–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å —Ä–æ–ª—è–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏',
    'State Monitoring - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
    'Cross-browser Support - —Ä–∞–±–æ—Ç–∞ –≤–æ –≤—Å–µ—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö',
    'Headless/Headed Mode - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –∑–∞–ø—É—Å–∫–∞'
  ];
  
  mcpCapabilities.forEach(capability => {
    console.log(`   üîß ${capability}`);
  });

  console.log('\nüìà 8. –ú–µ—Ç—Ä–∏–∫–∏ –∏ KPI');
  
  const metrics = {
    'UI Coverage': `${coverageReport.summary.coveragePercentage}%`,
    'Accessibility Score': `${coverageReport.summary.accessibilityScore}%`,
    'Critical Elements': `${criticalCheck.foundCritical.length}/${analyzer.config.criticalElements.length}`,
    'Interactive Elements': elementStats.summary.interactive,
    'Regression Risk': goldenComparison.identical ? '–ù–∏–∑–∫–∏–π' : '–°—Ä–µ–¥–Ω–∏–π'
  };
  
  console.log('   üìä –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:');
  Object.entries(metrics).forEach(([metric, value]) => {
    console.log(`      ${metric}: ${value}`);
  });

  console.log('\nüéØ 9. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã');
  
  const recommendations = coverageReport.recommendations;
  if (recommendations.length > 0) {
    console.log('   üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    recommendations.forEach(rec => {
      console.log(`      ‚Ä¢ ${rec}`);
    });
  } else {
    console.log('   ‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  }

  console.log('\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log(`üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ui-coverage-reports/demo-ui-coverage-${timestamp}.md`);
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

function getMockMCPSnapshot() {
  return `# Page snapshot

- region "Skip to main content":
  - link "Skip to main content":
    - /url: "#__docusaurus_skipToContent_fallback"
- navigation "Main":
  - link "Playwright logo Playwright":
    - /url: /
    - img "Playwright logo"
    - text: Playwright
  - link "Docs":
    - /url: /docs/intro
  - link "API":
    - /url: /docs/api/class-playwright
  - button "Node.js"
  - link "Community":
    - /url: /community/welcome
  - link "GitHub repository":
    - /url: https://github.com/microsoft/playwright
  - link "Discord server":
    - /url: https://aka.ms/playwright/discord
  - button "Switch between dark and light mode"
  - button "Search (Command+K)": Search ‚åò K
- banner:
  - heading "Playwright enables reliable end-to-end testing for modern web apps." [level=1]
  - link "Get started":
    - /url: /docs/intro
  - link "Star microsoft/playwright on GitHub":
    - /url: https://github.com/microsoft/playwright
    - text: Star
- main:
  - img "Browsers (Chromium, Firefox, WebKit)"
  - heading "Any browser ‚Ä¢ Any platform ‚Ä¢ One API" [level=3]
  - paragraph: Cross-browser. Playwright supports all modern rendering engines
  - link "TypeScript":
    - /url: https://playwright.dev/docs/intro
  - link "JavaScript":
    - /url: https://playwright.dev/docs/intro
  - link "Python":
    - /url: https://playwright.dev/python/docs/intro`;
}

function getGoldenSnapshot() {
  // –ò–º–∏—Ç–∞—Ü–∏—è "–∑–æ–ª–æ—Ç–æ–π" –≤–µ—Ä—Å–∏–∏ —Å –æ—Ç–ª–∏—á–∏—è–º–∏
  return `# Page snapshot

- navigation "Main":
  - link "Playwright logo Playwright":
    - /url: /
  - link "Docs":
    - /url: /docs/intro
  - button "Node.js"
  - link "Community":
    - /url: /community/welcome
  - button "Search (Command+K)": Search ‚åò K
- banner:
  - heading "Playwright enables reliable end-to-end testing" [level=1]
  - link "Get started":
    - /url: /docs/intro
- main:
  - heading "Any browser ‚Ä¢ Any platform ‚Ä¢ One API" [level=3]
  - link "TypeScript":
    - /url: https://playwright.dev/docs/intro`;
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
runDemo().catch(console.error); 