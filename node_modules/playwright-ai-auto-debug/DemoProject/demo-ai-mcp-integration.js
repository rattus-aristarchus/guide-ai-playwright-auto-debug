#!/usr/bin/env node
// DemoProject/demo-ai-mcp-integration.js

import fs from 'fs';
import path from 'path';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AI –∞–Ω–∞–ª–∏–∑–∞ —Å MCP –∏ Allure
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ playwright-ai-auto-debug
 */

console.log('üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AI + MCP + Allure');
console.log('='.repeat(50));

// 1. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
console.log('\nüîå 1. MCP Integration - DOM Snapshots');
console.log('   ‚úÖ MCP –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Playwright MCP —Å–µ—Ä–≤–µ—Ä—É');
console.log('   ‚úÖ –ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ DOM —Å–Ω–∞–ø—à–æ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü');
console.log('   ‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞');

// 2. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É DOM —Å–Ω–∞–ø—à–æ—Ç–∞
const errorContextPath = 'test-results/demo-üéØ-AI-Debug-Integration-Demo-‚ùå-Login-timeout-simulation-chromium/error-context.md';
if (fs.existsSync(errorContextPath)) {
  const domSnapshot = fs.readFileSync(errorContextPath, 'utf8');
  const lines = domSnapshot.split('\n').slice(0, 20);
  console.log('\nüìä –ü—Ä–∏–º–µ—Ä DOM —Å–Ω–∞–ø—à–æ—Ç–∞ –∏–∑ MCP:');
  console.log('   ' + lines.join('\n   '));
  console.log('   ... (–ø–æ–ª–Ω—ã–π —Å–Ω–∞–ø—à–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã)');
}

// 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI –∞–Ω–∞–ª–∏–∑–∞
console.log('\nü§ñ 2. AI Analysis Integration');
console.log('   ‚úÖ AI –ø–æ–ª—É—á–∞–µ—Ç DOM –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ç MCP');
console.log('   ‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ —Å —É—á–µ—Ç–æ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
console.log('   ‚úÖ –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è');

// 4. –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ AI –∞–Ω–∞–ª–∏–∑—ã
const aiAnalyses = [
  'allure-results/ai-response-demo-1.md',
  'allure-results/ai-response-demo-2.md', 
  'allure-results/ai-response-demo-3.md'
];

aiAnalyses.forEach((filePath, index) => {
  if (fs.existsSync(filePath)) {
    const content = fs.readFileSync(filePath, 'utf8');
    const title = content.split('\n')[0].replace('# ', '');
    console.log(`   üìù AI –∞–Ω–∞–ª–∏–∑ ${index + 1}: ${title}`);
  }
});

// 5. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Allure –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
console.log('\nüìä 3. Allure Integration');
console.log('   ‚úÖ AI –∞–Ω–∞–ª–∏–∑—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫–∞–∫ attachments');
console.log('   ‚úÖ –ö–∞–∂–¥—ã–π —É–ø–∞–≤—à–∏–π —Ç–µ—Å—Ç –ø–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑');
console.log('   ‚úÖ –¢–µ—Å—Ç—ã –ø–æ–º–µ—á–∞—é—Ç—Å—è –º–µ—Ç–∫–æ–π "ai-analyzed: true"');

// 6. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
const allureResultsDir = 'allure-results';
if (fs.existsSync(allureResultsDir)) {
  const files = fs.readdirSync(allureResultsDir);
  const resultFiles = files.filter(f => f.endsWith('-result.json'));
  const aiFiles = files.filter(f => f.startsWith('ai-response-'));
  
  console.log(`   üìÅ –°–æ–∑–¥–∞–Ω–æ ${resultFiles.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤`);
  console.log(`   ü§ñ –°–æ–∑–¥–∞–Ω–æ ${aiFiles.length} AI –∞–Ω–∞–ª–∏–∑–æ–≤`);
  console.log('   üìé AI –∞–Ω–∞–ª–∏–∑—ã –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ç–µ—Å—Ç–∞–º');
}

// 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π MCP
console.log('\nüöÄ 4. MCP Capabilities Demonstration');

const mcpFeatures = [
  {
    name: 'DOM Snapshot',
    description: '–ü–æ–ª–Ω—ã–π —Å–Ω–∞–ø—à–æ—Ç DOM —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    example: '–≠–ª–µ–º–µ–Ω—Ç—ã: –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –∫–Ω–æ–ø–∫–∏, —Ñ–æ—Ä–º—ã, —Å—Å—ã–ª–∫–∏'
  },
  {
    name: 'Element Interaction',
    description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
    example: 'click(), fill(), hover() —á–µ—Ä–µ–∑ MCP'
  },
  {
    name: 'Page Context',
    description: '–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞',
    example: 'URL, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è'
  },
  {
    name: 'Error Context',
    description: '–î–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–æ–∫',
    example: '–°–∫—Ä–∏–Ω—à–æ—Ç—ã, –≤–∏–¥–µ–æ, DOM —Å–æ—Å—Ç–æ—è–Ω–∏–µ'
  }
];

mcpFeatures.forEach(feature => {
  console.log(`   üîß ${feature.name}: ${feature.description}`);
  console.log(`      –ü—Ä–∏–º–µ—Ä: ${feature.example}`);
});

// 8. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
console.log('\nüìà 5. Demo Statistics');
console.log('   üß™ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 6 (1 ‚úÖ –ø—Ä–æ—à–µ–ª, 5 ‚ùå —É–ø–∞–ª–∏)');
console.log('   ü§ñ AI –∞–Ω–∞–ª–∏–∑–æ–≤: 3 (–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ)');
console.log('   üìä Allure attachments: —Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –≤–∏–¥–µ–æ, DOM —Å–Ω–∞–ø—à–æ—Ç—ã, AI –∞–Ω–∞–ª–∏–∑—ã');
console.log('   üîå MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –≤–∫–ª—é—á–µ–Ω–∞ (--use-mcp —Ñ–ª–∞–≥)');

// 9. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–∞
console.log('\nüéØ 6. Viewing Results');
console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ Allure –æ—Ç—á–µ—Ç: npm run allure:open');
console.log('   2. –ù–∞–π–¥–∏—Ç–µ —É–ø–∞–≤—à–∏–µ —Ç–µ—Å—Ç—ã (–∫—Ä–∞—Å–Ω—ã–µ)');
console.log('   3. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª–∏ —Ç–µ—Å—Ç–∞');
console.log('   4. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ attachments:');
console.log('      - Screenshot (—Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏)');
console.log('      - Video (–≤–∏–¥–µ–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)');
console.log('      - Error Context (DOM —Å–Ω–∞–ø—à–æ—Ç –æ—Ç MCP)');
console.log('      - AI Debug Analysis (–∞–Ω–∞–ª–∏–∑ –æ—Ç AI)');

console.log('\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run allure:open –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–∞'); 